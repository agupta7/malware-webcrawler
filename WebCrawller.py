class WebCrawller:
    @classmethod
    def crawl(cls, rootUrl, depthLimit):
        return "{\"" + rootUrl + "\": {\"unigram\": \"feature vector / bitmap\", \"descendents\": [\"array of objects with same structure\"]}}"
    @classmethod
    def downloadUrl(cls, url):
        # check for HTTP header 'Content-Type: text/html'
        # bail if not text/html
        pass
    @classmethod
    def saveFile(cls, url, urlContents):
        # do this part last
        # we might want to extract this method out to a new class/utility module
        pass
    


    @classmethod
    def extractLinks(cls, url, contents):
        # what about links that occur in HTML comments, script tags, and link tags
        # swati
        pass
    @classmethod
    def buildUnigram(cls, url, contents):
        # might want to extract this method out to a more generic class
        # could be responsible for building generic feature vectors out of input
        # swati
        pass
    @classmethod
    def parseHTML(cls, url, contents):
        # what to do if HTML doc uses Unicode characters beyond the ASCII range     
        extractLinks(url, contents)
        buildUnigram(url, contents)
        # ...
        pass
