from knn import *

# Test for dividing the data into training, test and validation sets    
# loadDatasetTrainTest('new_dataset.csv', 0.66, intermediateTrainingSet, testSet)
# loadDatasetTrainValidate(0.66, intermediateTrainingSet, finalTrainingSet, validationSet)
# print 'Test: ' + repr(len(testSet))
# print 'Train: ' + repr(len(intermediateTrainingSet))
# print 'Final Train: ' + repr(len(finalTrainingSet))
# print 'validation: ' + repr(len(validationSet))

# Test for calculating the euclidean Distance 
# data1 = [2, 2, 2, 2]
# data2 = [4, 4, 4, 4]
# distance = euclideanDistance(data1, data2, 4)
# print 'Distance: ' + repr(distance)

# Test for getting k-nearest neighbours
# finalTrainingSet = [[2, 2, 2, 2], [4, 4, 4, 4], [8, 8, 8, 8], [6, 6, 6, 6]]
# testInstance = [5, 5, 5, 5]
# k = 3
# neighbors = getNeighbors(finalTrainingSet, testInstance, k)
# print(neighbors)

# Test for getting output for the test instance
# neighbors = [[1,-1,1,1], [2,1,2,2], [3,1,3,3]]
# response = getResponse(neighbors)
# print(response)

# Test for accuracy
# testSet = [[1,1,1,1], [2,-1,2,2], [3,-1,3,3]]
# predictions = [0, 0, 0]
# accuracy = getAccuracy(testSet, predictions)
# print(accuracy)