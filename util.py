import base64
import urllib2
def validateUrl(url):
    parsed = urllib2.urlparse.urlparse(url)
    if parsed.scheme is None or parsed.netloc is None:
        return False
    if parsed.scheme.find('http') != 0:
        return False
    return True

def encodeUrl(url):
    # even though not widely seen,  URLs can contain unicode characters
    # as well as things like :,/?% which may or may not be compatible with file systems as file names
    # an easy way to represent URLs in filenames is use base64
    # unfortunately base64 uses [A-z0-9+/=] as its character set
    # notably, / isn't allowed in filenames because it's a path separator
    # however, we can just substitute out / for a compatible character like .

   base64url = base64.b64encode(url.encode('utf-8'))
   return base64url.replace('/', '.')

def decodeUrl(encodedUrl):
    base64url = encodedUrl.replace('.', '/')
    return str.decode(base64.b64decode(base64url), 'utf-8')

'''
unigramTree has:
    'url': string
    'unigram': array of 95 numbers
    'links': array of recursive unigramTrees
'''
def treeToList(unigramTree, unigramList = []):
    unigramList = unigramList or []
    if unigramTree is None:
        return []
    for link in (unigramTree['links'] or []):
        unigramList.append(link)
        treeToList(link, unigramList)
    return unigramList
