import numpy as np  
import csv
import operator
import math
#################### load Data from csv file 
def Load_Data  (filename):
	X = []
	Y = []
	with open (filename, "rb") as file:
		reader = csv.reader (file)
		for line in reader:
			Y.append (float(line[1]))
			line.pop(0)
			line.pop(1)	
			X.append (np.array(line , dtype=float))

	X = np.array(X)
	Y = np.array(Y,dtype=int)
	return X , Y

##################### this function computes the accuracy of the model 
def Accuracy (output, doutput):
	Acc = 0
	for indx in range (len(output)):
		if output[indx] == doutput[indx] :
			Acc += 1

	Acc = Acc*100.0/len(output)
	print "Accuracy: ",Acc	
	return Acc 

####################  this function returns the std for a single data instance 
def Std (instance):
	mean = sum(instance)/float(len(instance))
	dif_sqr = [math.pow(feature-mean,2) for feature in instance ]
	dif_mean =  sum(dif_sqr)/float(len(dif_sqr))	
	std = math.sqrt(dif_mean)
	return std 

# random shuffel for samples
def shuffle_in_unison_scary(a, b):
        rng_state = np.random.get_state()
        np.random.shuffle(a)
        np.random.set_state(rng_state)
        np.random.shuffle(b)
        print "Shuffled"
        return a,b

#################### split data into training and testing, given the test data ratio
def split(ratio_tst, X, Y):
        Xtest, X = np.split(X, [ratio_tst*len(Y)] )
        Ytest, Y = np.split(Y, [ratio_tst*len(Y)] )
        print "splitted"
        return Xtest,X,Ytest,Y
	
def Main():
	print



