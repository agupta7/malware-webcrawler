import requests
import xml.etree.ElementTree as ET
import sys
import re

class URLVoid:
    def __init__(self):
        self.apiKey = "bb6c304db60394e339eef97ad07f3f2d862ac3b2"

    def classify(self, url):
        # code here to call WOT service and return 1 for suspicious and -1 for safe
        try:
            apiurl = 'http://api.urlvoid.com/api1000/' + self.apiKey + '/host/' + re.sub(r'https?://(.+)', r'\1', url)
            response = requests.get(apiurl)

            xmlTree = ET.fromstring(response.text)

            detectionCount = xmlTree.findall('.//count')[0].text
            detectionCount = int(detectionCount) if not None or not '' else 0
            detectionCount = len(URLVoid.filterEngines(xmlTree.findall('.//engine')))
            
            return 1 if detectionCount >= 1 else -1
        except Exception as e:
            try:
                apiurl = 'http://api.urlvoid.com/api1000/' + self.apiKey + '/host/' + re.sub(r'https?://([^/]+)/?.*', r'\1/rescan', url)
                response = requests.get(apiurl)

                xmlTree = ET.fromstring(response.text)

                detectionCount = xmlTree.findall('.//count')[0].text
                detectionCount = int(detectionCount) if not None or not '' else 0
                detectionCount = len(URLVoid.filterEngines(xmlTree.findall('.//engine')))
                
                return 1 if detectionCount >= 1 else -1
            except Exception as e:
                print >> sys.stderr, apiurl + " has an exception: " + e.message

    @classmethod
    def filterEngines(cls, enginesList):
        removeEngines = ['SCUMWARE']
        outEngines = []
        for engine in enginesList:
            if not engine.text in removeEngines:
                outEngines.append(engine)

        return outEngines



if __name__ == "__main__":
    url = sys.argv[1]
    uv = URLVoid()
    print "Classifying {0}   :   {1}".format(url, uv.classify(url))
